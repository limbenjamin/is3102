<ui:composition template="../template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
                xmlns:p="http://primefaces.org/ui">
    <ui:define name="content">
        <h:form id="form">
            <h:outputText id="statusMessage" value="#{createForecastManagedBean.statusMessage}"/>
            <p:tabView id="controls">
                <p:tab title="Forecast By Naive Method">
                    <p:panelGrid columns="1">
                        <h:outputText value="Calculates the growth trend by taking the ratio between the average sales figures of the last 2 years, then adjusting the previous month-on-month values with the calculated growth trend weightage." />
                        <h:commandButton value="Perform Forecasting">
                            <f:ajax render=":form:statusMessage :form:mssrTable" listener="#{createForecastManagedBean.naiveForecast}" />
                        </h:commandButton>
                    </p:panelGrid>
                </p:tab>
                <p:tab title="Forecast By N-Point Moving Average">
                    <p:panelGrid>
                        <p:row>
                            <p:column>
                                <p:outputLabel for="plannedInv" value="Planned Inventory: " />
                            </p:column>
                            <p:column>
                                <p:inputText id="plannedInv" value="#{createForecastManagedBean.plannedInv}" />
                            </p:column>
                            <p:column rowspan="3">
                                Attempts to take the average sales figures of the N months that precedes the month planned. If sales figures are not available for any of the months, attempts to take the forecasted figures. If the forecasted figures are also not available, skips the month.
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column>
                                <p:outputLabel for="numPoints" value="Number of Points: " />
                            </p:column>
                            <p:column>
                                <p:inputText id="numPoints" value="#{createForecastManagedBean.numPoints}" />
                            </p:column>
                        </p:row>
                        <p:row>
                            <p:column colspan="2">
                                <h:commandButton value="Perform Forecasting">
                                    <f:ajax execute="plannedInv numPoints" render=":form:statusMessage :form:mssrTable" listener="#{createForecastManagedBean.nPointForecast}" />
                                </h:commandButton>
                            </p:column>
                        </p:row>
                    </p:panelGrid>
                </p:tab>
                <p:tab title="Submit For Approval">
                    <p:panelGrid columns="1">
                        <h:outputText value="Submits the current planned figures to the sales manager for approval. WARNING: Once submitted, figures may not be changed unless the sales manager rejects the forecast." />
                        <h:commandButton value="Submit Forecast">
                            <f:ajax execute="@form" render=":form:statusMessage :form:mssrTable" listener="#{createForecastManagedBean.saveForecast}" />
                        </h:commandButton>
                    </p:panelGrid>
                </p:tab>
            </p:tabView>
            <br/>
            <p:accordionPanel id="mssrTable" value="#{createForecastManagedBean.mssrPairedList}" var="mssrPairedEntry" multiple="true" activeIndex="#{createForecastManagedBean.panelActive}">
                <p:tab title="#{mssrPairedEntry.first.name} (id:#{mssrPairedEntry.first.id})">
                    <p:dataTable value="#{createForecastManagedBean.mssrLabels}" var="label">
                        <p:column>
                            <f:facet name="header">
                                <h:outputText value="Month" />
                            </f:facet>
                            <h:outputText value="#{label.second}" />
                        </p:column>
                        <p:columns value="#{mssrPairedEntry.second.first}" var="mssr">
                            <f:facet name="header">
                                <h:outputText value="#{mssr.month}" />
                                <br />
                                <h:outputText value="#{mssr.year}" />
                            </f:facet>
                            <h:outputText value="#{mssr[label.first]}" rendered="#{mssr.status != null and (label.first == 'qtySold' or label.first == 'actualInventory') and mssr.endMthUpdated == true}" />
                            <h:outputText value="-" rendered="#{mssr.status != null and (label.first == 'qtySold' or label.first == 'actualInventory') and mssr.endMthUpdated == false}" />
                            <h:outputText value="#{mssr[label.first]}" rendered="#{mssr.status != null and (label.first == 'qtyForecasted' or label.first == 'plannedInventory' or label.first == 'qtyRequested' or label.first == 'varianceOffset' or label.first == 'status')}" />
                            <h:outputText value="-" rendered="#{mssr.status == null}"/>
                        </p:columns>
                        <p:columns value="#{mssrPairedEntry.second.second}" var="mssr" style="#{(mssr.status == 'PENDING')?'background-color:#B1CAF2':null}">
                            <f:facet name="header">
                                <h:outputText value="#{mssr.month}" />
                                <br />
                                <h:outputText value="#{mssr.year}" />
                            </f:facet>
                            <h:outputText value="-" rendered="#{(label.first == 'varianceOffset' and mssr.varianceUpdated == false) or (label.first == 'status' and mssr.status == null)}" />
                            <h:outputText value="#{mssr[label.first]}" rendered="#{(label.first == 'varianceOffset' and mssr.varianceUpdated == true) or (label.first == 'status' and mssr.status != null)}" />
                            <h:outputText value="-" rendered="#{(label.first == 'qtySold' or label.first == 'actualInventory')}" />
                            <p:inputText value="#{mssr[label.first]}" rendered="#{(mssr.status == 'REJECTED' or mssr.status == null or mssr.status == 'NONE') and (label.first == 'qtyForecasted' or label.first == 'plannedInventory' or label.first == 'qtyRequested')}" />
                            <h:outputText value="#{mssr[label.first]}" rendered="#{!(mssr.status == 'REJECTED' or mssr.status == null or mssr.status == 'NONE') and (label.first == 'qtyForecasted' or label.first == 'plannedInventory' or label.first == 'qtyRequested')}" />
                        </p:columns>
                    </p:dataTable>
                </p:tab>
            </p:accordionPanel>
        </h:form>
    </ui:define>
</ui:composition>